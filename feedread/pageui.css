body {
  display: grid;
  grid-template-areas:
    "header"
    "maincontent";
  grid-template-rows: 2.5em 1fr;
  grid-template-columns: 1fr;
  /* grid-row-gap: 1px; */

  /* I don't understand why this subtraction is needed.
   * There doesn't seem to be a way to reliably fill the vertical space
   * without overflowing and adding a scrollbar.
 : */
  height: calc(100vh - 15px);

  padding: 0px;
  margin: 0px;
  border: 0px;
  background: black;
  color: white;
}

#buttonbux {
  grid-area: header;
  border: 1px outset;
  background-color: #379;
  padding: .4em;
}

#statusline {
  position: absolute; right: .3em; bottom: .2em;
  height: 1.5em;
  background-color: #322;
  opacity: 0;
}

#maincontent {
  grid-area: maincontent;
  padding: 0px;
  margin: 0px;
  border: 0px;
  /*
  maincontent is an iframe, and although background-color will override
  the iframe's color, the foreground color can not.
  So don't specify either one.
  background-color: #222;
  color: white;
  */
}

#maincontent iframe {
  padding: 0px;
  margin: 0px;
  border: 0px;
}

/* The tap-to-scroll areas on the four corners of the screen.
 * We can't trap events on an iframe or even the div enclosing
 * the iframe, but we can put divs on top that can capture events.
 */
.scrollarea {
  background: white;
  width: 35%;
  height: 15%;
  opacity: 0.1;
  z-index: 100;
}
#scrollarea_ul { position: absolute; left: 0;    top: 2.5em; }
#scrollarea_ur { position: absolute; right: 1em; top: 2.5em; }
#scrollarea_ll { position: absolute; left: 0;    bottom: 0; }
#scrollarea_lr { position: absolute; right: 1em; bottom: 0; }

/* Space the buttons evenly */
#buttonbox input[type=button]
    padding: 0;
    margin: 0;
    wwwidth: 25%;
    xxxborder: 0;
}
#buttonbox { float: right;
             mmmin-width: 85%;
             wwwidth: 100%;
           }

/* ******** The dropdown menu ********** */

#menuBtn { float: left; }

/* Dropdown button on hover & focus
 * enabling this causes the button to get much smaller on click,
 * and the corners to go sqare. No idea why.
.dropbtn:hover, .dropbtn:focus {
  background-color: #fff;
}
*/

/* The container <div> - needed to position the dropdown content */
.dropdown {
  /* position: relative; */
  float: left;
  position: absolute; left: 1em; top: 1em;*/
  display: inline-block;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
  display: none;
  position: absolute; left: .1em; top: 1.6em;
  background-color: #557;
  min-width: 12em;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 90;
}

/* Links inside the dropdown */
.dropdown-content a {
  padding: 7px 8px;
  text-decoration: none;
  display: block;
  border: 1px black outset;
  color: white;
  background: #666;
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover { background: #633; }

/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
.show { display:block; }
