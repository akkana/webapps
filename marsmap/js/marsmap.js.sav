// https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene

function initmap() {
/*
var scene = new THREE.Scene();
var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

var renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );
 */
const container = document.querySelector('#container');
const renderer = new THREE.WebGLRenderer();
const WIDTH = window.innerWidth;
const HEIGHT = window.innerHeight;
renderer.setSize(WIDTH, HEIGHT);

// Set up a camera
const VIEW_ANGLE = 45;
const ASPECT = WIDTH / HEIGHT;
const NEAR = 0.1;
const FAR = 10000;
const camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);
camera.position.set( 0, 0, 500 );

// Create a scene
const scene = new THREE.Scene();
scene.background = new THREE.Color( 0x000 );

scene.add(camera);

// Attach the renderer to the DOM element.
container.appendChild(renderer.domElement);


const RADIUS = 200;
const SEGMENTS = 50;
const RINGS = 50;

// Create a group to hold the sphere and its texture meshed together:
const globe = new THREE.Group();
scene.add(globe);

var loader = new THREE.TextureLoader();

//loader.load('maps/marscolor.jpg', function (texture) {
loader.load( 'land_ocean_ice_cloud_2048.jpg', function ( texture ) {
    // Create the sphere
    var sphere = new THREE.SphereGeometry(RADIUS, SEGMENTS, RINGS);

    // Map the texture to the material.
    var material = new THREE.MeshBasicMaterial( { map: texture, overdraw: 0.5 } );

    // Create a new mesh with sphere geometry.
    var mesh = new THREE.Mesh(sphere, material);

    // Add mesh to globe
    globe.add(mesh);
} );

globe.position.z = -300;

const pointLight = new THREE.PointLight(0xFFFFFF);

pointLight.position.x = 10;
pointLight.position.y = 50;
pointLight.position.z = 400;
scene.add(pointLight);


/*
var geometry = new THREE.BoxGeometry();
var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
var cube = new THREE.Mesh( geometry, material );
scene.add( cube );

camera.position.z = 5;

function animate() {
    requestAnimationFrame( animate );
    //cube.rotation.x += 0.01;
    //cube.rotation.y += 0.01;
    renderer.render( scene, camera );
}
animate();
*/
}
